# -*- coding: utf-8 -*-
"""exercícios_anatel_mg.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/github/medllynthayna/Analise_Dados/blob/master/exerc%C3%ADcios_anatel_mg.ipynb

![anatel](img/anatel_logo.png "Logo Anatel")

# Análise de Dados da Anatel em Minas Gerais (2006 - 2019)
"""

from google.colab import drive
drive.mount('/content/drive')

"""A Agência Nacional de Telecomunicaçõe ([Anatel](https://www.anatel.gov.br/institucional/)) foi criada em 16 de julho de 1997 com o objetivo de regular o setor de telecomunicações para contribuir com o desenvolvimento do Brasil. Neste estudo iremos explorar o conjunto de dados das **Reclamações Registradas na Anatel** no estado de Minas Gerais durante os anos de 2006 até 2019. Os dados foram baixaados do  website [Dados Abertos](http://www.dados.gov.br/dataset/solicitacoesregistradasnaanatel) e o [Dicionário de Dados Oficial](data/Reclamações_Glossário_e_Metadados.pdf) está disponível na pasta: [`data/Reclamações_Glossário_e_Metadados.pdf`](data/Reclamações_Glossário_e_Metadados.pdf).

## Exercícios
Faça as questões abaixo usando somente a biblioteca [pandas](https://pandas.pydata.org/).

1. Importe o pacote **pandas** como o nome pd.
"""

import numpy as np

import pandas as pd

"""2. Carregue em memória o conjunto de dados disponível na pasta [`data/anatel_mg_2006_2019.csv`](data/anatel_mg_2006_2019.csv) para uma variável chamada **df**."""

df = pd.read_csv('anatel_mg_2006_2019.csv')

"""3. Quantas linhas e quantas colunas foram carregadas em memória?"""

df.shape

"""4. Mostre as 5 primeiras linhas do *dataset*."""

df.head()

"""5.  Quais são os tipos de dados de cada uma das colunas?"""

df.dtypes

"""6. Mostre a quantidade de colunas para cada um dos tipos de dados."""

df.dtypes.value_counts()

"""7. Mostre as informações básicas do DataFrame."""

df.info()

"""8. Verifique se existem dados ausentes (*misssing data*) no conjunto de dados."""

df.isnull().values.any()

"""9. Qual é o número total de dados ausentes?"""

df.isnull().sum().sum()

"""10. Qual é o número total de dados ausentes por coluna?"""

df.isnull().sum()

"""11. Remova todos os dados ausentes encontrados."""

df.dropna(subset=['QtdeSolic'], inplace = True)

df.isnull().sum()

"""12. Selecione o serviço que possui o maior número de solicitações `QtdeSolic` na Anatel."""

pd.crosstab(df['Servico'].max(), df['QtdeSolic'])

"""13. Qual é o menor número de solicitações `QtdeSolic` na Anatel."""

pd.crosstab(df['Servico'].min(), df['QtdeSolic'])

"""14. Mostre todas as linhs iguais ao menor número de solicitações `QtdeSolic` na Anatel."""

df.loc[df.QtdeSolic == np.min(df.QtdeSolic)]

"""15. Mostre as contagens de solicitações `QtdeSolic` por tipo de serviço `Servico`."""

df.groupby('Servico').QtdeSolic.describe()

"""16. Ao longo dos anos mostre o número de solicitações por mês?"""

solicitacao_anos = df.groupby(['Ano', 'Mes'])['QtdeSolic'].sum()
solicitacao_anos

"""17. Crie o vetor **reclamacoes** com todos os dados que cuja coluna `Tipo` seja igual a "Reclamação"."""

reclamacoes = np.where(df['Tipo'] == 'Reclamação')[0]
len(reclamacoes)

"""18. Mostre o número total de solictiações `QtdeSolic` de reclamações para cada tipo de serviço `Servico`"""

df.groupby('Servico').QtdeSolic.count()

"""19. Quais são os maiores ou maior motivo de solicitação de reclamações?"""

df['Motivo'].value_counts()

"""20. Faça um agrupamento de dados pela coluna `GrupoEconNorm`, mostrando um sumário estatístico da quantidade solicitações `QtdeSolic`."""

df.groupby('GrupoEconNorm').QtdeSolic.describe()