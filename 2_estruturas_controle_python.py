# -*- coding: utf-8 -*-
"""2_estruturas_controle_python.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cwUY8RikNnG1Y7nEMwADEqifn5Clb3IB

## Estruturas de Controle 


### Estruturas de Seleção

As estruturas de seleção *if* e *if/else* são usadas para controle da execução sequêncial de um programa. 
Na prática, se uma determinada condição lógica for avaliada como verdadeira, o interpretador Python executa todos os comandos dentro do bloco da estrutura de seleção. 
Em Python, para a estruturas de seleção única usamos a palavra-chave *if* e para estruturas de seleção múltiplas usamos o nome *elsif*. 

```python
 if condicao1:
    # Executa quando a condição1 for verdadeira
 elif condicao2:
    # Executa quando a condição2 for verdadeira
 else:
    # Executa quando todas condições não forem satisfeitas
```

### Estruturas de Repetição

O Python possui duas estruturas de repetição, são elas: *for* e *while*. A estrutura de repetição *for*, em sua sintaxe, difere um pouco, por exemplo, das linguagens de programação baseadas em C, onde definimos uma condição de parada (i < n) e um passo de iteração (i++). O comando *for* é usado para percorrer os itens de qualquer sequência (p. ex.: lista, string ou tupla) para que eles apareçam em série ou simplesmente como um laço de repetição (*loop*).
"""

cores  = ["Vermelho", "Laranja", "Amarelo", "Verde", "Azul", "Anil", "Violeta"]

for cor in cores:
    print("Eu ♥ " + cor)

"""Se você possui alguma experiência anterior com programação, deve estar se perguntando neste exato momento, como podemos percorrer os itens de uma sequência usando índices? Para tal, podemos utilizar a função range() em conjunto com a função len(). A função *range(start, stop, step)* do Python, retorna uma sequência de números, começando em 0 (zero) por padrão, e incrementando de um em um, até o fim de um número especificado como parâmetro. A função len(), por sua vez, retorna o número de itens de uma determina sequência. Acompanhe abaixo, alguns exemplos de como essas funções podem ser usadas em conjunto com a instrução *for* para indexar itens de uma lista."""

# EXEMPLOS - Função range()
lista1 = range(5)
lista2 = range(10, 20, 2)
lista3 = range(1, 5)
lista4 = range(5, -1, -1)

print("EXEMPLOS: Função range()\n")

for item in lista1:
    print(item) # Para range(5) Saída: [0, 1, 2, 3, 4]

print("\n") 
    
for item in lista2:
    print(item) # Para range(10, 20, 2) Saída: [10, 12, 14, 16, 18]

print("\n")     
    
for item in lista3:
    print(item) # Para range(1, 5) Saída: [1, 2, 3, 4]

print("\n")     
    
for item in lista4:
    print(item) # Para range(1, 5) Saída: [1, 2, 3, 4]
    
    
print("\n")     
    
    
# EXEMPLOS - for, range() e len
print("EXEMPLOS: for, len() e range()\n")


# Imprimindo lista de cores
cores  = ["Vermelho", "Laranja", "Amarelo", "Verde", "Azul", "Anil", "Violeta"]
n = len(cores) # a função len() retorna o número de elementos

for i in range(n):
    print(cores[i])

print("\n")

for i in range((n - 1), -1, -1):
    print(cores[i])


# for aninhado para impressão de um padrão numérico
for i in range(10):
    for j in range(i):
        print(i, end=" ")    # Imprime o número
    print("\n")              # Adiciona quebra de linha ao final de cada linha

"""Assim como o for, a estrutura de repetição while é usada para repetir um trecho de código várias vezes, porém, no while a repetição continua enquanto uma condição lógica definida seja verdadeira (True), veja alguns exemplos abaixo: 

```python
while condicao: # enquanto condição for verdadeira
    # Executa algum(ns) comando(s)
    # Atualiza variável de controle
```
"""

contador = 0                 # Define uma variável de controle que será avaliada na condição

while contador < 10:         # enquanto a condição (contador < 10) for verdadeira
    print(contador)          # Executa algum comando: print(contador)
    contador = contador + 1  # Atualiza a variável de controle
    
print("\n")


# EXEMPLO: Algoritmo Fatorial Iterativo
n = 3
i = 1
resultado = 1

while i <= n:
    resultado = resultado * i
    i = i + 1
    
print("Fatorial de %d é %d" % (n, resultado))

"""### Técnicas de Looping

1. Ao percorrer dicionários, a chave e o valor, podem ser recuperados ao mesmo tempo através do método *items()*;

```python
websites = {'site': "Python Software Foundation", 'url': "https://www.python.org/"}

for key, value in websites.items():
    print(key, value)
    
# Saída
# site Python Software Foundation
# url https://www.python.org/
```

2. Ao percorrer sequências, índice e o item, podem ser recuperados ao mesmo tempo através do método *enumerate()*;

```python
rgb = ["Red", "Green", "Blue"]

for i, item in enumerate(rgb):
    print(i, item)
    
# Saída
# 0 Red
# 1 Green
# 2 Blue
```

3. Para percorrer duas ou mais sequências ao mesmo tempo, as entradas podem ser emparelhadas através da função *zip()*;


```python
condinomes_android = ["Petit Four", "Eclair",  "Honeycomb", "Ice Cream Sandwich", "Lollipop", "Marshmallow", "Nougat", "Oreo", "Pie"]
versoes_android = ["1.1", "2.0 – 2.1", "3.0 – 3.2.6", "4.0 – 4.0.4", "5.0 – 5.1.1", "6.0 – 6.0.1", "7.0 – 7.1.2", "8.0 – 8.1", "9.0"]

for codinome, versao in zip(condinomes_android, versoes_android):
    print(codinome, versao)
    
# Saída
# Petit Four 1.1
# Eclair 2.0 – 2.1
# Honeycomb 3.0 – 3.2.6
# Ice Cream Sandwich 4.0 – 4.0.4
# Lollipop 5.0 – 5.1.1
# Marshmallow 6.0 – 6.0.1
# Nougat 7.0 – 7.1.2
# Oreo 8.0 – 8.1
# Pie 9.0
```

4. Para iterar em uma sequência ordenada sem alterar a ordem dos elementos utilize o metodo *sorted()* que irá retornar uma nova lista ordenada sem alterar a original

```python
estados_sudeste_brasileiro = ["São Paulo", "Rio de Janeiro", "Minas Gerais", "Espírito Santo"]

for estado in sorted(set(estados_sudeste_brasileiro)):
    print(estado)
    
# Saída
# Espírito Santo
# Minas Gerais
# Rio de Janeiro
# São Paulo    
    
```

## Exercícios

1. A nota final de um estudante é calculada a partir de três notas atribuídas, respectivamente, a um trabalho
de laboratório, a uma avaliação semestral e a um exame final. A média das três notas mencionadas
obedece aos pesos a seguir:

| Nota                    | Peso |
|-------------------------|------|
| Trabalho de Laboratório | 2    |
| Avaliação Semestral     | 3    |
| Exame Final             | 5    |


Faça um programa que receba as três notas, calcule e mostre a média ponderada e o conceito que segue
a tabela:

| Média Ponderada        | Conceito |
|------------------------|----------|
| 8,00 <= Média <= 10,00 | A        |
| 7,00 <= Média < 8,00   | B        |
| 6,00 <= Média < 7,00   | C        |
| 5,00 <= Média < 6,00   | D        |
| 0,00 <= Média < 5,00   | E        |
"""

notaTrab = int(input("digite sua nota do trabalho: "))
notaAv = int(input("digite sua nota da avaliaçao: "))
notaEx = int(input("digite sua nota do exame: "))
peso1 = 2
peso2 = 3
peso3 = 5
mdp1 = (notaTrab * peso1)
mdp2 = (notaAv * peso2)
mdp3 = (notaEx * peso3)
mediaP = (mdp1 + mdp2 + mdp3) / (peso1 + peso2 + peso3)
pontFinal = ""
if mediaP >= 8 and mediaP <= 10:
  pontFinal = "A"
elif mediaP >= 7 and mediaP < 8:
  pontFinal = "B"
elif mediaP >= 6 and mediaP < 7:
  pontFinal = "C"
elif mediaP >= 5 and mediaP < 6:
  pontFinal = "D"
elif mediaP >= 0 and mediaP < 5:
  pontFinal = "E"
print("media e: " + str(mediaP) + "; sua nota é: " + pontFinal)

"""2. Faça um programa que receba três notas de um aluno, calcule e mostre a média aritmética e a mensagem constante na tabela a seguir. 

| Média                  | Situação       |
|------------------------|----------------|
| 7,00 <= Média <= 10,00 | Aprovado       |
| 3,00 <= Média < 7,00   | Exame Especial |
| 0,00 <= Média < 3,00   | Reprovado      |
"""

nota1 = int(input("digite sua nota 1: "))
nota2 = int(input("digite sua nota 2: "))
nota3 = int(input("digite sua nota 3: "))
mediaP = (nota1 + nota2 + nota3) / 3
if mediaP >= 7 and mediaP <= 10:
  pontFinal = "Aprovado"
elif mediaP >= 3 and mediaP < 7:
  pontFinal = "Exame Especial"
elif mediaP >= 0 and mediaP < 3:
  pontFinal = "reprovado"
print("seu resultado é: " + pontFinal)

"""3. Faça um programa que receba dois números e mostre o maior."""

nun1 = int(input("digite numero 1: "))
nun2 = int(input("digite numero 2: "))
result = ""
if nun1 > nun2:
  result = nun1
else:
  result = nun2
print(result)

"""4. Faça um programa que receba um número inteiro e verifique se é par ou ímpar."""

num = int(input("digite um numero: "))
confirma = num % 2
result = ""
if confirma != 0:
  result = "impar"
else:
  result = "par"
print(result)

"""5. Faça um programa que mostre o menu de opções a seguir, receba a opção do usuário e os dados necessários para executar cada operação.

Menu de opções:

1. Somar dois números.
2. Raiz quadrada de um número.

Digite a opção desejada:
"""

menu = int(input("digite 1 para somar; digite 2 para raiz. "))
soma = 0
if menu == 1:
  numero1 = int(input("digite o primeiro numeor: "))
  numero2 = int(input("digite o segundo numero: "))
  result = numero1 + numero2
elif menu == 2:
  numero1 = int(input("digite o numero: "))
  result = numero1 ** (1 / 2)
else:
  print("comece de novo")
print(result)

"""6. Faça um programa que receba o código correspondente ao cargo de um funcionário e seu salário atual e mostre o cargo, o valor do aumento e seu novo salário. Os cargos estão na tabela a seguir.

| Código | Cargo       | Percentual  |
|--------|-------------|-------------|
| 1      | Escrituário | 50%         |
| 2      | Secretário  | 35%         |
| 3      | Caixa       | 20%         |
| 4      | Gerente     | 10%         |
| 5      | Diretor     | Sem Aumento |
"""

cod = input("digite o codigo do seu cargo: ")
sal = tuple(input("digite o salario do seu cargo: "))
if cod == "1":
  salarioNovo = sal + (0,5 * sal)
elif cod == "2":
  salarioNovo = sal + (0,35 * sal)
elif cod == "3":
  salarioNovo = sal + (0,2 * sal)
elif cod == "4":
  salarioNovo = sal + (0,1 * sal)
elif cod == "5":
  salarioNovo = "seu salario nao teve aumento nenhum!"
else:
  salarioNovo = "invalido"
print(salarioNovo)

"""7. Faça um programa que receba o salário inicial de um funcionário, calcule e mostre o novo salário, acrescido de bonificação e de auxílio escola.

| Salário                      | Bonificação     |
|------------------------------|-----------------|
| Até R\\$500,00                 | 5% do salário  |
| Entre R\\$500,00 e R\$1.1200,00 | 12% do salário  
| Acima de R\\$1.200,00          | Sem Bonificação |

| Salário           | Auxílio Escola |
|-------------------|----------------|
| Até R\\$600,00      | R\\$150,00       |
| Acima de R\\$600,00 | R\\$100,00       |
"""

salario = float(input("digite o salario: "))
if salario < 500:
  salarioNovo = salario + (0.05 * salario)
elif salario >= 500 and salario < 1200:
  salarioNovo = salario + (0.12 * salario)
elif salario >= 1200:
  salarioNovo = "nao tem bonificação"
print(salarioNovo)

"""8. Um supermercado deseja reajustar os preços de seus produtos usando o seguinte critério: o produto poderá ter seu preço aumentado ou diminuído. Para o preço ser alterado, o produto deve preencher pelo menos um dos requisitos a seguir:

| Venda Média Mensal | Preço Atual             | % de Aumento | % de Diminuição |
|--------------------|-------------------------|--------------|-----------------|
| < 500              | < R\\$ 30,00              | 10           | -               |
| >= 500 e < 1.200   | >= R\\$30,00 e < R\\$ 80,00 | 15           | -               |
| >= 1.200           | >= R\\$80,00              | -            | 20              |
"""

vendaM = float(input("qual a venda mensal? "))
preco = 0
precoNovo = 0
if (vendaM < 500):
  preco = float(input("digite um preço: "))
  if preco < 30.00:
    precoNovo = preco + (0.1 * preco)
    print(precoNovo)
  else:
    precoNovo = "invalido"
    print(precoNovo)
elif (preco >= 500 and preco < 1200):
  preco = float(input("digite um preço: "))
  if preco >= 30.00 and preco < 80.00:
    precoNovo = preco + (0.15 * preco)
    print(precoNovo)
  else:
    precoNovo = "invalido"
    print(precoNovo)
elif (preco >= 1200):
  preco = float(input("digite um preço: "))
  if preco >= 80.00:
    precoNovo = preco - (0.15 * preco)
    print(precoNovo)
  else:
    precoNovo = "invalido"
    print(precoNovo)

"""9. Faça um programa para resolver equações do 2º grau.

$$
a^{2} + bx + c = 0
$$


Onde x é uma variável, sendo a, b e c constantes, com a ≠ 0 


$$
\Delta = b^{2} - 4ac
$$

$$
\Delta < 0 \rightarrow não \: existe  \: raiz  \: real
$$

$$
\Delta = 0 \rightarrow  existe  \: raiz  \: real
$$

$$
x = \frac{-b}{2a}
$$



$$
\Delta > 0 \rightarrow existem \: duas  \: raizes  \: reais
$$


$$
x_1 = \frac{-b \: + \: \sqrt{\Delta } }{2a}
$$

$$
x_2 = \frac{-b \: - \: \sqrt{\Delta } }{2a}
$$
"""

def delta(a, b, c): 
  resultado = (b * b) - (4 * a * c) 
  return resultado 
def bascara(a, b, c): 
  resultado = delta(a, b, c) 
  r = [] 
  x1 = (-b) + (delta(a, b ,c) ** (1/2)) / (2 * a) 
  x2 = (-b) - (delta(a, b, c) ** (1/2)) / (2 * a) 
  r.append(x1) 
  r.append(x2) 
  return r 
a = int(input("digite o valor de a: ")) 
b = int(input("digite o valor de b: ")) 
c = int(input("digite o valor de c: ")) 
print (bascara(a, b, c))

"""10. Dados três valores X, Y e Z, verifique se eles podem ser os comprimentos dos lados de um triângulo e, se forem, verifique se é um triângulo equilátero, isósceles ou escaleno. Se eles não formarem um triângulo, escreva uma mensagem. Considere que:

- O comprimento de cada lado de um triângulo é menor que a soma dos outros dois lados;
- Chama-se equilátero o triângulo que tem três lados iguais;
- Denomina-se isósceles o triângulo que tem o comprimento de dois lados iguais;
- Recebe o nome de escaleno o triângulo que tem os três lados diferentes.
"""

num1 = float(input('numero 1: '))
num2 = float(input('numero 2: '))
num3 = float(input('numero 3: '))
if num1 > num2 and num1 > num3 :
  maiorNum = num1
elif num1 > num2 and num1 < num3:
  maiorNum = num3
elif num2 > num1 and num2 > num3:
  maiorNum = num2
elif num1 == num2:
  if num1 == num3:
    equilatero = "sim"
  elif num

"""11. Faça um programa que receba a altura e o peso de uma pessoa. De acordo com a tabela a seguir, verifique e mostre a classificação dessa pessoa.

| Altura           | Peso até 60 | Peso entre 60 e 90 (Inclusive) | Peso Acima de 90 |
|------------------|-------------|--------------------------------|------------------|
| Menores que 1,20 | A           | D                              | G                |
| De 1,20 a 1,70   | B           | E                              | H                |
| Maiores que 1,70 | C           | F                              | I                |
"""

altura = float(input("digite sua altura: "))
peso = float(input("digite seu peso: "))
if altura < 1.20:
  if peso <= 60:
    classe = "A"
  elif peso > 60 and peso < 90:
    classe = "D"
  else:
     classe = "G" 
if altura >= 1.20 and altura < 1.70:
  if peso <= 60:
    classe = "B"
  elif peso > 60 and peso < 90:
    classe = "E"
  else:
     classe = "H" 
if altura >= 1.70:
  if peso <= 60:
    classe = "C"
  elif peso > 60 and peso < 90:
    classe = "F"
  else:
     classe = "I"
print("Sua classe é: " + str(classe))

"""12. Faça um programa que receba:

- O código de um produto comprado, supondo que a digitação do código do produto seja sempre válida, isto é, um número inteiro entre 1 e 10.
- O peso do produto em quilos.
- O código do país de origem, supondo que a digitação do código seja sempre válida, isto é, um número inteiro entre 1 e 3. 

Tabelas:

| Código do País de Origem | Imposto |
|--------------------------|---------|
| 1                        | 0%      |
| 2                        | 15%     |
| 3                        | 25%     |


| Código do Produto | Preço por Grama |
|-------------------|-----------------|
| 1 a 4             | 10              |
| 5 a 7             | 25              |
| 8 a 10            | 35              |
"""



"""13. Escreva um programa que calcule o quadrado e o cubo dos números de 0 a 10, e imprima os valores em forma de tabela. Número | Quadrado | Cubo"""

for i in range(10):
  quad = i ** 2
  cubo = i ** 3
  print("O quadrado é: " + str(quad) + "; O cubo é: " + str(cubo))

"""14. Um funcionário de uma empresa recebe, anualmente, aumento salarial. Sabe-se que:

- Esse funcionário foi contratado em 2005, com salário inicial de R\\$ 1.000,00.
- Em 2006, ele recebeu aumento de 1,5% sobre seu salário inicial.
- A partir de 2007 (inclusive), os aumentos salariais sempre corresponderam ao dobro do percentual do ano anterior.

Faça um programa que determine o salário atual desse funcionário.
"""



"""15. Foi feita uma pesquisa para determinar o índice de mortalidade infantil em certo período. Faça um programa que:

- Leia o número de crianças nascidas no período;
- Identifique o sexo (M ou F) e o tempo de vida de cada criança nascida.

O programa deve calcular e mostrar:

- A porcentagem de crianças do sexo feminino mortas no período;
- A porcentagem de crianças do sexo masculino mortas no período;
- A porcentagem de crianças que viveram 24 meses ou menos no período.
"""



"""16. Faça um programa que receba duas notas de seis alunos. Calcule e mostre:

- A média aritmética das duas notas de cada aluno; e
- A mensagem que está na tabela a seguir:
- O total de alunos aprovados;
- O total de alunos de exame;
- O total de alunos reprovados;
- A média da classe.

| Média Aritmética | Situação       |
|------------------|----------------|
| Entre 0 e 29     | Reprovado      |
| Entre 30 e 69    | Exame Especial |
| Entre 70 e 100   | Aprovado       |
"""



"""17. Faça um programa para calcular a área de um triângulo e que não permita a entrada de dados inválidos, ou seja, medidas menores ou iguais a 0."""

altura = float(input("digite a altura: "))
base = float(input("digite a base: "))
if altura > 0 and base > 0:
  area = "Sua area é: " + str((base * altura) / 2)
else: 
  area = ("Numeros invalidos, precisam ser maiores que zero")
print(area)

"""18. Faça um programa que leia um conjunto não determinado de valores e mostre o valor lido, seu quadrado, seu cubo e sua raiz quadrada. Finalize a entrada de dados com um valor negativo ou zero."""



"""19. Faça um programa que leia um número não determinado de pares de valores [m,n], todos inteiros e positivos, um par de cada vez, e que calcule e mostre a soma de todos os números inteiros entre m e n (inclusive). A digitação de pares terminará quando m for maior ou igual a n."""



"""20. Faça um programa que receba vários números, calcule e mostre:

    - A soma dos números digitados;
    - A quantidade de números digitados;
    - A média dos números digitados;
    - O maior número digitado;
    - O menor número digitado;
    - A média dos números pares;
    - A porcentagem dos números ímpares entre todos os números digitados.

Finalize a entrada de dados com a digitação do número 0.
"""

